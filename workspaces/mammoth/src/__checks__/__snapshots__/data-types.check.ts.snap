// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`data-types should select all data types (type) should match snapshot 1`] = `"{ [x: string]: Maybe<\\"A\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"B\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"C\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"A\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"B\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"C\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"A\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"B\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"C\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"A\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"B\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; } | { [x: string]: Maybe<\\"C\\">; int8: Maybe<\\"Int8\\">; bigint: Maybe<\\"Int8\\">; bigserial: Maybe<\\"Int8\\">; serial8: Maybe<\\"Int8\\">; bit: Maybe<string>; bitVarying: Maybe<string>; varbit: Maybe<string>; box: Maybe<string>; bytea: Maybe<Buffer>; character: Maybe<\\"Text\\">; char: Maybe<\\"Text\\">; characterVarying: Maybe<\\"Text\\">; varchar: Maybe<\\"Text\\">; circle: Maybe<{ x: number; y: number; radius: number; }>; cidr: Maybe<string>; caseInsensitiveText: Maybe<\\"Text\\">; citext: Maybe<\\"Text\\">; date: Maybe<\\"Date\\">; doublePrecision: Maybe<\\"Float8\\">; float8: Maybe<\\"Float8\\">; inet: Maybe<string>; decimal: Maybe<\\"Numeric\\">; integer: Maybe<\\"Int4\\">; int: Maybe<\\"Int4\\">; int4: Maybe<\\"Int4\\">; interval: Maybe<unknown>; json: Maybe<unknown>; jsonb: Maybe<unknown>; line: Maybe<string>; lseg: Maybe<string>; macaddr: Maybe<string>; macaddr8: Maybe<string>; money: Maybe<string>; numeric: Maybe<\\"Numeric\\">; point: Maybe<{ x: number; y: number; }>; path: Maybe<string>; pgLsn: Maybe<string>; polygon: Maybe<string>; real: Maybe<\\"Float4\\">; float4: Maybe<\\"Float4\\">; smallint: Maybe<\\"Int4\\">; int2: Maybe<\\"Int4\\">; serial: Maybe<\\"Int4\\">; serial4: Maybe<\\"Int4\\">; smallserial: Maybe<\\"Int4\\">; serial2: Maybe<\\"Int4\\">; text: Maybe<\\"Text\\">; time: Maybe<string>; timeWithoutTimeZone: Maybe<string>; timeWithTimeZone: Maybe<string>; timestamp: Maybe<\\"Date\\">; timestamptz: Maybe<\\"Date\\">; timestampWithoutTimeZone: Maybe<\\"Date\\">; timestampWithTimeZone: Maybe<\\"Date\\">; tsquery: Maybe<string>; tsvector: Maybe<string>; txidSnapshot: Maybe<string>; uuid: Maybe<Uuid<\\"..\\">>; xml: Maybe<string>; array: Maybe<\\"Text\\"[]>; array2d: Maybe<\\"Text\\"[][]>; }"`;
