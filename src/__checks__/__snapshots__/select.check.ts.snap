// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`select should convert null value to not null using coalesce (type) should match snapshot 1`] = `"{ coalesce: GetDataType<number, true>; }"`;

exports[`select should not use in with wrong data type (type) should match snapshot 1`] = `
"Argument of type 'SelectQuery<GetSelectable<Column<\\"createDate\\", \\"foo\\", Date, true, any, undefined>>>' is not assignable to parameter of type 'string[] | Expression<string, true, any>'.
  Type 'SelectQuery<GetSelectable<Column<\\"createDate\\", \\"foo\\", Date, true, any, undefined>>>' is missing the following properties from type 'Expression<string, true, any>': name, nameIsAlias, _expressionBrand, unusedName, and 33 more."
`;

exports[`select should return null and not null properties (type) should match snapshot 1`] = `"{ id: GetDataType<string, true>; createDate: GetDataType<Date, true>; value: GetDataType<number, false>; }"`;

exports[`select should return nullable properties of all sides because of full join (type) should match snapshot 1`] = `"{ name: GetDataType<string, false>; startDate: GetDataType<Date, false>; value: GetDataType<number, false>; }"`;

exports[`select should return nullable properties of left joined columns (type) should match snapshot 1`] = `"{ id: GetDataType<string, true>; endDate: GetDataType<Date, false>; value: GetDataType<number, false>; }"`;

exports[`select should return nullable properties of left side properties when right joining (type) should match snapshot 1`] = `"{ name: GetDataType<string, false>; startDate: GetDataType<Date, true>; value: GetDataType<number, false>; }"`;

exports[`select should return renamed properties because of alias (type) should match snapshot 1`] = `"{ fooName: GetDataType<string, true>; fooValue: GetDataType<number, false>; }"`;

exports[`select should select aggregate subquery (type) should match snapshot 1`] = `"{ id: GetDataType<string, true>; count: GetDataType<string, true>; }"`;

exports[`select should select aggregate with alias (type) should match snapshot 1`] = `"{ id: GetDataType<string, true>; total: GetDataType<number, false>; }"`;

exports[`select should select and await result set (type) should match snapshot 1`] = `"{ id: string; value: number; }[]"`;

exports[`select should select array_agg (type) should match snapshot 1`] = `"{ arrayAgg: GetDataType<string[], false>; }"`;

exports[`select should select case with correct type and alias (type) should match snapshot 1`] = `"{ bar: GetDataType<\\"A\\" | \\"B\\" | \\"C\\", true>; }"`;

exports[`select should select expression (type) should match snapshot 1`] = `"{ \\"?column?\\": GetDataType<number, false>; }"`;

exports[`select should select named expression (type) should match snapshot 1`] = `"{ test: GetDataType<number, false>; }"`;

exports[`select should select null column in subquery (type) should match snapshot 1`] = `"{ id: GetDataType<string, true>; value: GetDataType<number, false>; }"`;
